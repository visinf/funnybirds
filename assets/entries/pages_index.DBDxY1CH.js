import{j as e,g as c,i as p,h as n,o as m,p as l,q as u,r as g,t as x,k as f}from"../chunks/chunk-BkzYN8Dj.js";/* empty css                      */const y=({data:o})=>{const{system:t,resources:r,url:s}=o;return e.jsx(c.Provider,{value:{imageLoader:p,assetBaseUrl:n,resources:r},children:e.jsx(m,{system:t},s)})},j=Object.freeze(Object.defineProperty({__proto__:null,default:y},Symbol.toStringTag,{value:"Module"})),h=({data:o})=>{const{pageMeta:t}=o,{origin:r}=new URL(o.url),s={"@context":"https://schema.org","@type":"WebSite",name:l,url:r};let i=t.socialImageUrl;return t.socialImageAssetName&&(i=`${r}${p({src:t.socialImageAssetName,format:"raw"})}`),e.jsxs(e.Fragment,{children:[o.url&&e.jsx("meta",{property:"og:url",content:o.url}),e.jsx("title",{children:t.title}),e.jsx("meta",{property:"og:title",content:t.title}),t.description&&e.jsxs(e.Fragment,{children:[e.jsx("meta",{name:"description",content:t.description}),e.jsx("meta",{property:"og:description",content:t.description})]}),e.jsx("meta",{property:"og:type",content:"website"}),e.jsx("meta",{property:"og:site_name",content:l}),i&&e.jsx("meta",{property:"og:image",content:t.socialImageUrl}),e.jsx("script",{type:"application/ld+json",dangerouslySetInnerHTML:{__html:JSON.stringify(s,null,2)}}),t.excludePageFromSearch&&e.jsx("meta",{name:"robots",content:"noindex, nofollow"}),t.custom.map(({property:a,content:d})=>e.jsx("meta",{property:a,content:d},a)),u,g.map(a=>e.jsx("link",{rel:"preload",href:`${n}${a}`,as:"font",crossOrigin:"anonymous"},a)),x.map(a=>e.jsx("link",{rel:"preload",href:`${n}${a}`,as:"image"},a))]})},S=Object.freeze(Object.defineProperty({__proto__:null,Head:h},Symbol.toStringTag,{value:"Module"})),P={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"/renderer/+onRenderClient.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:f}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/index/+Page.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:j}},Head:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/index/+Head.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:S}}};export{P as configValuesSerialized};
